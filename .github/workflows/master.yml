# This is a basic workflow to help you get started with Actions

name: Create New VM on HOST machine at openshift.truetech.solutions

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: self-hosted

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - uses: actions/checkout@v3

      # Time of starting Building Cloud Image
      - name: Starting to run steps
        run:  echo "Started - `date`"

        # Install the needfull packages.
      - name: Install the needfull packages.
        run:  sudo apt install cloud-image-utils virtinst -y

        # Make directory to download and cloud-img files
      - name: Creating repo to save cloud image.
        run:  |
          mkdir ubuntu18
          cd ubuntu18
          rm -rf *
          cp cloud.txt /var/lib/libvirt/images/

        # Install the needfull packages.
      - name: Download the cloud-image.
        run:  wget https://cloud-images.ubuntu.com/bionic/current/bionic-server-cloudimg-amd64.img

        # cloud-localds creates a disk-image with user-data and/or meta-data for cloud-init(1).  user-data can contain everything which is supported by cloud-init(1)
      - name: cloud-localds creates a disk-image with user-data
        run:  |
          cd ../
          sudo cloud-localds /var/lib/libvirt/images/cloud.img cloud.txt

        # qemu-img - QEMU disk image utility.
      - name: qemu-img - QEMU disk image utility.
        run:  sudo qemu-img convert -f qcow2 ubuntu18/bionic-server-cloudimg-amd64.img /var/lib/libvirt/images/ubuntu18.img

        # DEploy
#      - name: Step 1 - Build Cloud Image
#        run: sh ./bootstart_new_vm.sh

       # Time of Completion Building Cloud Image
      - name: Ending executing steps.
        run: |
          echo "Completed - `date`"
          echo "Image saved on Host VM"
